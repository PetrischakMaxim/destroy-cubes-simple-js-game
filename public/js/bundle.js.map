{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/const.js","webpack:///./src/main.js","webpack:///./src/presenter/game.js","webpack:///./src/presenter/timer.js","webpack:///./src/store.js","webpack:///./src/utils/dom-utils.js","webpack:///./src/utils/utils.js","webpack:///./src/view/abstract.js","webpack:///./src/view/bar.js","webpack:///./src/view/board.js","webpack:///./src/view/controls.js","webpack:///./src/view/cube.js","webpack:///./src/view/points.js","webpack:///./src/view/popup.js","webpack:///./src/view/start-button.js","webpack:///./src/view/stats.js","webpack:///./src/view/timer.js","webpack:///./src/view/toggle-button.js"],"names":[],"mappings":"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;AAE/C;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAsC;;AAEvB,uBAAuB,iDAAY;;AAElD;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAsC;AACwB;;AAE/C,mBAAmB,iDAAY;;AAE9C;AACA;AACA,eAAe,+DAAU;AACzB,mBAAmB,uEAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC3CA;AAAA;AAAA;AAAsC;;AAEvB,qBAAqB,iDAAY;;AAEhD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAsC;AACvB,oBAAoB,iDAAY;;AAE/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sDAAsD,aAAa;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAsC;;AAEvB,0BAA0B,iDAAY;;AAErD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAsC;;AAEvB,oBAAoB,iDAAY;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,KAAK;AAC7C,wCAAwC,MAAM;AAC9C;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAsC;;AAEvB,oBAAoB,iDAAY;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAsC;AACA;;AAEvB,2BAA2B,iDAAY;;AAEtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+EAA+E,mDAAY,OAAO;AAClG,UAAU,mDAAY;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","export const ButtonStatus = {\n  START: `Start`,\n  PAUSE: `Pause`,\n};\n\nexport const TICK_TIME = 1000;\nexport const TIMER_VALUE = 60;\nexport const CUBES_PER_GAME = 60;\nexport const MAX_ALLOWED_CUBE_IN_FIELD = 5;\n","import GamePresenter from \"./presenter/game\";\n\nconst appElement = document.querySelector(`.app`);\nconst mainContainerElement = appElement.querySelector(`.app__main .container`);\n\nconst game = new GamePresenter(mainContainerElement);\n\ngame.init();\n","\nimport BarView from \"../view/bar\";\nimport PointsView from \"../view/points\";\nimport ControlsView from \"../view/controls\";\nimport ToggleButtonView from \"../view/toggle-button\";\nimport StartButtonView from \"../view/start-button\";\nimport StatsView from \"../view/stats\";\nimport BoardView from \"../view/board\";\nimport PopupView from \"../view/popup\";\nimport CubeView from \"../view/cube\";\n\nimport TimerPresenter from \"./timer\";\n\nimport Store from \"../store\";\n\nimport {ButtonStatus, MAX_ALLOWED_CUBE_IN_FIELD} from \"../const\";\nimport {render, remove} from \"../utils/dom-utils\";\nimport {getRandomInteger, getRandomIndex, runCallbacks} from \"../utils/utils\";\n\nexport default class Game {\n\n  constructor(container) {\n\n    this._container = container;\n    this._store = new Store();\n    this._data = this._store.getData();\n    this._duration = 1;\n    this._score = 0;\n\n    this._boardView = new BoardView();\n    this._barView = new BarView();\n    this._controlsView = new ControlsView();\n    this._toggleButtonView = new ToggleButtonView();\n    this._startButtonView = new StartButtonView();\n    this._pointsView = new PointsView(this._score);\n    this._statsView = null;\n    this._popupView = null;\n\n    this._interval = null;\n\n    this._cubes = new Map();\n\n    this._timerPresenter = new TimerPresenter(this._duration, () => this._end());\n\n    this._running = null;\n    this._pausing = false;\n\n    this._handleStartButtonClick = this._handleStartButtonClick.bind(this);\n    this._handleToggleButtonClick = this._handleToggleButtonClick.bind(this);\n    this._handleCubeClick = this._handleCubeClick.bind(this);\n    this._handleFormSubmit = this._handleFormSubmit.bind(this);\n  }\n\n  init() {\n    this._renderElements();\n    this._setInnerHandlers();\n    this._timerPresenter.init();\n  }\n\n  _run() {\n    this._updateState(this._pausing, this._running);\n    this._timerPresenter.tick();\n    this._renderCubes();\n  }\n\n  _pause() {\n    this._updateState(this._running, this._pausing);\n    this._timerPresenter.pause();\n    this._stopRenderCubes();\n  }\n\n  _end() {\n    this._handleToggleButtonClick();\n    this._renderPopup();\n  }\n\n  _setInnerHandlers() {\n    this._startButtonView.setClickHandler(this._handleStartButtonClick);\n    this._toggleButtonView.setClickHandler(this._handleToggleButtonClick);\n  }\n\n  _renderElements() {\n    if (this._data) {\n      this._statsView = new StatsView(this._data);\n      render(this._container, this._statsView);\n    }\n    // fragment to do\n    render(this._container, this._boardView);\n    render(this._container, this._barView);\n    render(this._barView, this._timerPresenter.getView());\n    render(this._barView, this._pointsView);\n    render(this._barView, this._controlsView);\n    render(this._controlsView, this._startButtonView);\n    render(this._controlsView, this._toggleButtonView);\n  }\n\n  _renderCubes(duration = 500) {\n    this._interval = window.setInterval(() => {\n      this._initCube();\n    }, duration);\n  }\n\n  _initCube() {\n    this._createCube();\n    this._stopRenderCubes();\n    this._renderCubes(getRandomInteger(500, 750));\n  }\n\n  _createCube() {\n    // fragment to do\n    const cube = new CubeView();\n    const cubeId = cube.getId();\n    this._cubes.set(cubeId, cube);\n    const currentCube = this._cubes.get(cubeId);\n    currentCube.setClickHandler(() => this._handleCubeClick(cubeId));\n    render(this._boardView, currentCube);\n\n    this._hideUnclickedCubes(this._cubes);\n  }\n\n  _hideUnclickedCubes(cubes) {\n    if (cubes.size > MAX_ALLOWED_CUBE_IN_FIELD) {\n      const hideCube = () => this._hideCube(getRandomIndex([...cubes.keys()]));\n      const hidenCubeCount = getRandomInteger(1, 3);\n      runCallbacks(hidenCubeCount, hideCube);\n    }\n  }\n\n  _hideCube(id) {\n    this._cubes.get(id).hide();\n  }\n\n  _stopRenderCubes() {\n    window.clearInterval(this._interval);\n    this._interval = null;\n  }\n\n  _renderPopup() {\n    this._popupView = new PopupView(this._score);\n    render(this._container, this._popupView);\n    this._popupView.setSubmitHandler(this._handleFormSubmit);\n    this._popupView.show();\n  }\n\n  _renderMessage(message, cb) {\n    let isConfirmed = confirm(`${message}`);\n    return (isConfirmed) ? cb() : false;\n  }\n\n  _updateState(prevStatus, currentStatus) {\n    if (prevStatus) {\n      return;\n    }\n    prevStatus = currentStatus;\n    prevStatus = prevStatus;\n  }\n\n  _updateScore(score = this._score) {\n    score++;\n    this._score = score;\n    this._pointsView.updateScore(score);\n  }\n\n  _clearBoard() {\n    this._updateScore(-1);\n    this._cubes.forEach(remove);\n    this._cubes.clear();\n  }\n\n  _handleCubeClick(id) {\n    this._updateScore();\n    this._hideCube(id);\n  }\n\n  _handleStartButtonClick() {\n    this._renderMessage(`Play again? Time and points will be reset`, () => {\n      this._timerPresenter.reset();\n      this._handleToggleButtonClick();\n      this._clearBoard();\n    });\n  }\n\n  _handleToggleButtonClick() {\n    let currentStatus = ``;\n    const toggleButton = this._toggleButtonView.getElement();\n    if (toggleButton.dataset.status === `${ButtonStatus.PAUSE}`) {\n      currentStatus = `${ButtonStatus.START}`;\n      this._pause();\n    } else {\n      currentStatus = `${ButtonStatus.PAUSE}`;\n      this._run();\n    }\n    toggleButton.dataset.status = currentStatus;\n    toggleButton.textContent = currentStatus;\n  }\n\n  _handleFormSubmit(evt) {\n    const inputValue = evt.target.querySelector(`.form-control`).value;\n    const scoreValue = this._score;\n    this._store.setData(inputValue, scoreValue);\n  }\n\n}\n","import TimerView from \"../view/timer\";\n\nimport {TICK_TIME, TIMER_VALUE} from \"../const\";\n\nexport default class Timer {\n\n  constructor(duration, callback) {\n    this._view = new TimerView();\n    this._countElement = this._view.getElement().querySelector(`.timer__count`);\n    this._duration = duration * TIMER_VALUE;\n    this._initialDuration = this._duration;\n    this._callback = callback;\n    this._interval = null;\n    this._min = null;\n    this._sec = null;\n    this._paused = null;\n  }\n\n  init() {\n    this._updateTick();\n  }\n\n  getView() {\n    return this._view;\n  }\n\n  pause() {\n    this._paused = true;\n    this._clearInterval();\n  }\n\n  tick() {\n    this._paused = false;\n    this._interval = window.setInterval(() => {\n\n      if (--this._duration === 0) {\n        this._clearInterval();\n        this._callback();\n      }\n\n      this._updateTick();\n\n    }, TICK_TIME);\n  }\n\n  reset() {\n    window.clearInterval(this._interval);\n    this._interval = null;\n    this._duration = this._initialDuration;\n    this._updateTick();\n  }\n\n  _updateTick() {\n    this._min = parseInt(this._duration / 60, 10);\n    this._sec = parseInt(this._duration % 60, 10);\n\n    this._min = (this._min < 10) ? `0${this._min}` : `${this._min}`;\n    this._sec = (this._sec < 10) ? `0${this._sec}` : `${this._sec}`;\n\n    this._countElement.textContent = `${this._min}:${this._sec}`;\n  }\n\n  _clearInterval() {\n    window.clearInterval(this._interval);\n    this._interval = null;\n  }\n\n}\n","export default class Store {\n\n  constructor() {\n    this._data = new Map();\n    this._storage = window.localStorage;\n  }\n\n  setData(name, score) {\n    this._data.set(name, score);\n    this._updateStorage(name, score);\n  }\n\n  getData() {\n    return this._storage.gamers;\n  }\n\n  _updateStorage(name, score) {\n    const storageContainer = JSON.parse(this._storage.getItem(`gamers`)) || {};\n    storageContainer[name] = score;\n    this._storage[`gamers`] = JSON.stringify(storageContainer);\n  }\n\n}\n","import Abstract from \"../view/abstract\";\n\nexport const RenderPosition = {\n  AFTERBEGIN: `afterbegin`,\n  BEFOREEND: `beforeend`,\n};\n\nexport const render = (container, child, place = RenderPosition.AFTERBEGIN) => {\n  if (container instanceof Abstract) {\n    container = container.getElement();\n  }\n\n  if (child instanceof Abstract) {\n    child = child.getElement();\n  }\n\n  switch (place) {\n    case RenderPosition.AFTERBEGIN:\n      container.prepend(child);\n      break;\n    case RenderPosition.BEFOREEND:\n      container.append(child);\n      break;\n  }\n};\n\nexport const createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n\n  return newElement.firstChild;\n};\n\nexport const renderTemplate = (container, template, place) => {\n  if (container instanceof Abstract) {\n    container = container.getElement();\n  }\n\n  container.insertAdjacentHTML(place, template);\n};\n\nexport const replace = (newChild, oldChild) => {\n  if (oldChild instanceof Abstract) {\n    oldChild = oldChild.getElement();\n  }\n\n  if (newChild instanceof Abstract) {\n    newChild = newChild.getElement();\n  }\n\n  const parent = oldChild.parentElement;\n\n  if (parent === null || oldChild === null || newChild === null) {\n    throw new Error(`Can't replace unexisting elements`);\n  }\n\n  parent.replaceChild(newChild, oldChild);\n};\n\nexport const remove = (component) => {\n  if (!(component instanceof Abstract)) {\n    throw new Error(`Can remove only components`);\n  }\n\n  component.getElement().remove();\n  component.removeElement();\n};\n","export const getRandomInteger = (a = 0, b = 1) => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n\nexport const getRandomIndex = (array) => array[getRandomInteger(0, array.length - 1)];\n\nexport const runCallbacks = (times, cb) => new Array(times).fill(null).forEach(cb);\n\nexport const getRandomTransition = () => {\n  const R1 = ((Math.random() * 0.699) + 0.300).toFixed(3);\n  const R2 = ((Math.random() * -0.899) - 0.100).toFixed(3);\n  const R3 = ((Math.random() * 0.899) + 0.100).toFixed(3);\n  const R4 = (Math.random() + 0.4).toFixed(3);\n  return `cubic-bezier(${R1},${R2},${R3},${R4})`;\n};\n\nexport const getRandomColor = () => `#${((1 << 24) * Math.random() | 0).toString(16)}`;\n\nexport const generateCubeParams = () => {\n  const randomDimension = getRandomInteger(50, 150);\n  return {\n    top: `${getRandomInteger(0, 75)}%`,\n    left: `${getRandomInteger(0, 75)}%`,\n    width: `${randomDimension}px`,\n    height: `${randomDimension}px`,\n    borderRadius: `${getRandomInteger(0, 15)}px`,\n    color: `${getRandomColor()}`,\n    zIndex: `${getRandomInteger(1, 10)}`,\n    transition: `all ${randomDimension / 100}s ${getRandomTransition()}`\n  };\n};\n\nexport const generateId = () => Math.random().toString(36).substr(2, 9);\n","import {createElement} from \"../utils/dom-utils.js\";\n\nexport default class Abstract {\n  constructor() {\n    if (new.target === Abstract) {\n      throw new Error(`Can't instantiate Abstract, only concrete one.`);\n    }\n\n    this._element = null;\n  }\n\n  getTemplate() {\n    throw new Error(`Abstract method not implemented: getTemplate`);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n  removeElement() {\n    this._element = null;\n  }\n}\n","import AbstractView from \"./abstract\";\n\nexport default class Bar extends AbstractView {\n\n  getTemplate() {\n    return (\n      `<div class=\"bar game__bar\"></div>`\n    );\n  }\n\n}\n","import AbstractView from \"./abstract\";\n\nexport default class Board extends AbstractView {\n\n  getTemplate() {\n    return (\n      `<div class=\"game__board board border border-primary\"></div>`\n    );\n  }\n\n}\n","import AbstractView from \"./abstract\";\n\nexport default class Controls extends AbstractView {\n\n  getTemplate() {\n    return (\n      `<nav class=\"bar__field controls\">\n      </nav>`\n    );\n  }\n\n}\n","import AbstractView from \"./abstract\";\nimport {generateId, generateCubeParams} from \"../utils/utils\";\n\nexport default class Cube extends AbstractView {\n\n  constructor() {\n    super();\n    this._id = generateId();\n    this._params = generateCubeParams();\n    this._element = this.getElement();\n    this._clikedState = `cube--clicked`;\n    this._setStyle(this._element);\n    this._clickHandler = this._clickHandler.bind(this);\n    this._click = null;\n  }\n\n  getTemplate() {\n    return (\n      `<div class=\"game__cube cube\"></div>`\n    );\n  }\n\n  getId() {\n    return this._id;\n  }\n\n  setClickHandler(callback) {\n    this._click = callback;\n    this._element.addEventListener(`click`, this._clickHandler);\n  }\n\n  hide() {\n    this._element.classList.add(this._clikedState);\n  }\n\n  _clickHandler() {\n    this._click();\n  }\n\n  _setStyle(el) {\n    Object.assign(el.style, this._params);\n  }\n\n}\n","import AbstractView from \"./abstract\";\n\nexport default class Points extends AbstractView {\n\n  constructor(score) {\n    super();\n    this._score = score;\n    this._scoreElement = this.getElement().querySelector(`.points__count`);\n  }\n\n  getTemplate() {\n    return (\n      `<div class=\"bar__field points\">\n        <p class=\"points__title\">Score:</p>\n        <div class=\"points__container border border-primary p-1\">\n          <b class=\"points__count\">${this._score}</b>\n        </div>\n      </div>\n    `);\n  }\n\n  updateScore(score) {\n    this._score = score;\n    this._scoreElement.textContent = score;\n  }\n\n}\n","import AbstractView from \"./abstract\";\nexport default class Popup extends AbstractView {\n\n  constructor(result = 0) {\n    super();\n    this._hiddenState = `popup--hidden`;\n    this._result = result;\n    this._element = this.getElement();\n\n    this._formSubmitHandler = this._formSubmitHandler.bind(this);\n    this._formSubmit = null;\n  }\n\n  getTemplate() {\n    return (\n      `<section class=\"popup popup--hidden\">\n        <div class=\"popup__content bg-light shadow\">\n          <h2 class=\"popup__title\">\n            Your score: <span class=\"popup__result\">${this._result}</span>\n          </h2>\n          <form class=\"popup__form\">\n            <div class=\"form-group\">\n              <label for=\"name\">Name:</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"name\"\n                placeholder=\"Enter your name\"\n                required\n              />\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary w-100\">\n              Save\n            </button>\n          </form>\n        </div>\n      </section>`\n    );\n  }\n\n  show() {\n    this._element.classList.remove(this._hiddenState);\n  }\n\n  setSubmitHandler(callback) {\n    this._formSubmit = callback;\n    this._element.querySelector(`.popup__form`)\n      .addEventListener(`submit`, this._formSubmitHandler);\n  }\n\n  _formSubmitHandler(evt) {\n    evt.preventDefault();\n    this._formSubmit(evt);\n    this._element.querySelector(`.popup__form`).submit();\n  }\n\n}\n","import AbstractView from \"./abstract\";\n\nexport default class StartButton extends AbstractView {\n\n  constructor() {\n    super();\n    this._clickHandler = this._clickHandler.bind(this);\n    this._click = null;\n  }\n\n  getTemplate() {\n    return (\n      `<button class=\"btn-outline-dark btn controls__button\">\n        New Game\n      </button>`\n    );\n  }\n\n  setClickHandler(callback) {\n    this._click = callback;\n    this.getElement().addEventListener(`click`, this._clickHandler);\n  }\n\n  _clickHandler(evt) {\n    evt.preventDefault();\n    this._click();\n  }\n\n}\n\n\n","import AbstractView from \"./abstract\";\n\nexport default class Stats extends AbstractView {\n\n  constructor(gamers) {\n    super();\n    this._gamers = JSON.parse(gamers);\n  }\n\n  getTemplate() {\n    return (\n      `<div class=\"game__stats stats\">\n        <p class=\"stats__title\">Gamers:</p>\n        <ul class=\"list-group\">${this._generateData()}</ul>\n      </div>`\n    );\n  }\n\n  _generateData() {\n    return Object.entries(this._gamers).map(([name, score]) => {\n      return (\n        `<li class=\"list-group-item stats__data\">\n            <b class=\"stats__content\">${name}</b>\n            <b class=\"stats__content\">${score}</b>\n        </li>`\n      );\n    }).join(``);\n  }\n}\n","import AbstractView from \"./abstract\";\n\nexport default class Timer extends AbstractView {\n\n  getTemplate() {\n    return (\n      `<div class=\"bar__field timer\">\n        <p class=\"timer__title\">Time:</p>\n        <div class=\"timer__container border border-primary p-1\">\n          <b class=\"timer__count\">01:00</b>\n      </div>\n    `);\n  }\n}\n","import AbstractView from \"./abstract\";\nimport {ButtonStatus} from \"../const\";\n\nexport default class ToggleButton extends AbstractView {\n\n  constructor() {\n    super();\n    this._clickHandler = this._clickHandler.bind(this);\n    this._click = null;\n  }\n\n  getTemplate() {\n    return (\n      `<button class=\"btn-outline-primary btn controls__button\" data-status=\"${ButtonStatus.START}\">\n        ${ButtonStatus.START}\n      </button>`\n    );\n  }\n\n  setClickHandler(callback) {\n    this._click = callback;\n    this.getElement().addEventListener(`click`, this._clickHandler);\n  }\n\n  _clickHandler(evt) {\n    evt.preventDefault();\n    this._click();\n  }\n\n}\n"],"sourceRoot":""}